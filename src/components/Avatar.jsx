/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/models/6490f6229837221882d60895-2.glb
*/

import React, { useEffect, useRef, useState } from 'react'
import { useAnimations, useFBX, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import * as THREE from "three";

export function Avatar(props) {
    const {animation, section} = props;
    const [headFollow, setheadFollow] = useState(false);
    const [cusorFollow, setcusorFollow] = useState(false);
  const group = useRef();
  const { nodes, materials } = useGLTF('models/6490f6229837221882d60895-2.glb')



  const { animations: typeingAnimation } = useFBX('animations/Typing.fbx')
  const { animations: fallingAnimation } = useFBX('animations/Falling.fbx')
  const { animations: standingAnimation } = useFBX('animations/Standing.fbx')
  const { animations: fallingIdleAnimation } = useFBX('animations/Falling_Idle.fbx')
  const { animations: fallingLandingAnimation } = useFBX('animations/Falling_Landing.fbx')
  const { animations: waveAnimation } = useFBX('animations/Wave.fbx')
  const { animations: pointingAnimation } = useFBX('animations/Pointing.fbx')



  typeingAnimation[0].name = 'Typing';
  fallingAnimation[0].name = 'Falling';
  standingAnimation[0].name = 'Standing';
  fallingIdleAnimation[0].name = 'Falling_Idle';
  fallingLandingAnimation[0].name = 'Falling_Landing';
  waveAnimation[0].name = 'Wave';
  pointingAnimation[0].name = 'Pointing';

  const { actions } = useAnimations([typeingAnimation[0],standingAnimation[0],fallingAnimation[0],fallingIdleAnimation[0],fallingLandingAnimation[0],waveAnimation[0],pointingAnimation[0]],group)


  useFrame((state)=>{
    if(headFollow) group.current.getObjectByName("Head").lookAt(state.camera.position)
    if(cusorFollow) {
        group.current.getObjectByName("Head").lookAt(state.camera.position)
        const target = new THREE.Vector3(state.mouse.x,state.mouse.y,1)
        group.current.getObjectByName("Spine").lookAt(target)
    }
  })

  useEffect(()=>{
    actions[animation].reset().fadeIn(.5).play()
    return () => {
        actions[animation].reset().fadeOut(.5)
    }
  }, [animation])

  return (
    <group ref={group} {...props} dispose={null}>
      <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Glasses.geometry} material={materials.Wolf3D_Glasses} skeleton={nodes.Wolf3D_Glasses.skeleton} />
      <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
      <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
    </group>
  )
}

useGLTF.preload('models/6490f6229837221882d60895-2.glb')
